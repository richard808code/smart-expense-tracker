package cz.smartexpensetracker.smart_expense_tracker.model;

import com.fasterxml.jackson.annotation.JsonBackReference;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import lombok.Data;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@Entity
@Data
public class Category {

    // Primary key of Category entity, autogenerated UUID
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    // Name of the category, must not be blank
    @NotBlank(message = "You have to enter the name of the category!")
    private String name;

    // One-to-many relationship with Budget entity, cascades all changes, orphanRemoval ensures budgets are deleted if removed from the list
    @OneToMany(mappedBy = "category", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Budget> budgets = new ArrayList<>();

    // Many-to-one relationship to User entity, fetched lazily for performance
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    @JsonBackReference(value = "user-categories") // Prevents cyclic JSON serialization
    private User user;
}